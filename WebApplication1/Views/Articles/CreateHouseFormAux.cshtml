@model WebApplication1.ViewModel.ArticleViewModel



    <div class="col-md-12 article-container-header justify-content-between flex-wrap d-flex ">
        <h3 class="">Informacion de casa adicional</h3>
        <div class="show-hide-bottom-form">
            <i onclick="showHouseBodyForm('houseAux')" class="fas fa-plus " style="display: none;" id="houseAuxPlusButton"></i>
            <i onclick="hideHouseBodyForm('houseAux')" class="fas fa-minus " id="houseAuxMinusButton"></i>
        </div>
        @Html.HiddenFor(model => model.HouseAux.Id)

    </div>
<div class="col-md-12 row mt-3 mb-3" name="houseAuxFormBody">

    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.HouseAux.HouseForeheadMeasureAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.HouseAux.HouseForeheadMeasureAux, new { htmlAttributes = new { @class = "form-control HouseAuxElement", @onchange = "validateItem(this.id, 0, `Debes incluir una medida de frente valida`)" } })
        </div>
        <span id="errorHouseAux_HouseForeheadMeasureAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.HouseAux.HouseBackgroundMeasureAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.HouseAux.HouseBackgroundMeasureAux, new { htmlAttributes = new { @class = "form-control HouseAuxElement", @onchange = "validateItem(this.id, 0, `Debes incluir una medida de fondo valida`)" } })
        </div>
        <span id="errorHouseAux_HouseBackgroundMeasureAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.HouseAux.BedroomsAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.HouseAux.BedroomsAux, new { htmlAttributes = new { @class = "form-control HouseAuxElement", @onchange = "validateItem(this.id, 0, `Debes incluir un numero de cuartos valido`)" } })
        </div>
        <span id="errorHouseAux_BedroomsAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.HouseAux.BathroomsAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.HouseAux.BathroomsAux, new { htmlAttributes = new { @class = "form-control HouseAuxElement", @onchange = "validateItem(this.id, 0, `Debes incluir un numero de baños valido`)" } })
        </div>
        <span id="errorHouseAux_BathroomsAux" class="text-danger col-md-12"></span>

    </div>



    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.HouseAux.GarageAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.HouseAux.GarageAux, new { htmlAttributes = new { @class = "form-control HouseAuxElement" } })
        </div>
        <span id="errorHouseAux_GarageAux" class="text-danger col-md-12"></span>
    </div>

    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.HouseAux.LevelsAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.HouseAux.LevelsAux, new { htmlAttributes = new { @class = "form-control HouseAuxElement", @onchange = "validateItem(this.id, 0, `Debes incluir un numero de niveles valido`)" } })
        </div>
        <span id="errorHouseAux_LevelsAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-md-3 align-items-center d-flex">
        <div class="col-md-12 ">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-success" data-toggle="modal" onclick="getFeatures('HouseAux')" data-target="#UbicationFeaturesModal">
                Caracteristicas de casa
            </button>
        </div>
        <span class="text-danger field-validation-error" id="FeatureError">
        </span>
    </div>

    <div class="form-group col-md-3 d-flex align-items-end justify-content-end ">
        <span><i onclick="deleteHouseForm(false)" class="fas fa-trash-alt trash-button"></i></span>
    </div>

    <div class="col-md-12 row text-center mb-3 " id="HouseAuxFeaturesList">
        <div class="col-md-12">
            <hr />
        </div>
        <span id="errorHouseAux" class="text-danger col-md-12"></span>
        @if (ViewBag.houseAuxFeaturesSelected != null)
        {
            foreach (var feature in ViewBag.houseAuxFeaturesSelected)
            {
                <div class="list-group-item col-md-2 m-3 @feature.Model list-group-item-success" id='@feature.Model@feature.FeatureId'>
                    @feature.Description
                    <input name="HouseAuxFeatures[]" style="display: none" value="@feature.FeatureId">
                </div>
            }
        }
    </div>



</div>


