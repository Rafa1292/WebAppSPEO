@model WebApplication1.ViewModel.ArticleViewModel

@{
    var foreheadMeasure = "";
    var backgroundMeasure = "";
    var bedrooms = "";
    var bathrooms = "";
    var garage = "";
    var levels = "";

    if (Model != null && Model.HouseAux != null)
    {

     foreheadMeasure = Model.HouseAux.HouseForeheadMeasureAux.ToString();
     backgroundMeasure = Model.HouseAux.HouseBackgroundMeasureAux.ToString();
     bedrooms = Model.HouseAux.BedroomsAux.ToString();
     bathrooms = Model.HouseAux.BathroomsAux.ToString();
     garage = Model.HouseAux.GarageAux.ToString();
     levels = Model.HouseAux.LevelsAux.ToString();
    }



}

<div class="col-md-12 article-container-header justify-content-between  d-flex ">
    <h3 class="col-xs-11">Informacion de casa adicional</h3>
    <div class="col-xs-1 show-hide-bottom-form">
        <i onclick="showHouseBodyForm('houseAux')" class="fas fa-plus " style="display: none;" id="houseAuxPlusButton"></i>
        <i onclick="hideHouseBodyForm('houseAux')" class="fas fa-minus " id="houseAuxMinusButton"></i>
    </div>
    @Html.HiddenFor(model => model.HouseAux.Id)

</div>
<div class="col-md-12 flex-wrap mt-3 mb-3" style="display:flex;" name="houseAuxFormBody">

    <div class="form-group col-lg-3">
        @Html.LabelFor(model => model.HouseAux.HouseForeheadMeasureAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            <input type="text" class="form-control HouseAuxElement" value="@foreheadMeasure" name="articleViewModel.HouseAux.HouseForeheadMeasureAux" id="HouseAux_HouseForeheadMeasureAux" onchange="validateItem(this.id, 0, `Debes incluir una medida de frente valida`)" />
        </div>
        <span id="errorHouseAux_HouseForeheadMeasureAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-lg-3">
        @Html.LabelFor(model => model.HouseAux.HouseBackgroundMeasureAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            <input type="text" class="form-control HouseAuxElement" value="@backgroundMeasure" name="articleViewModel.HouseAux.HouseBackgroundMeasureAux" id="HouseAux_HouseBackgroundMeasureAux" onchange="validateItem(this.id, 0, `Debes incluir una medida de fondo valida`)" />
        </div>
        <span id="errorHouseAux_HouseBackgroundMeasureAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-lg-3">
        @Html.LabelFor(model => model.HouseAux.BedroomsAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            <input type="text" class="form-control HouseAuxElement" value="@bedrooms" name="articleViewModel.HouseAux.BedroomsAux" id="HouseAux_BedroomsAux" onchange="validateItem(this.id, 0, `Debes incluir un numero de cuartos valido`)" />
        </div>
        <span id="errorHouseAux_BedroomsAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-lg-3">
        @Html.LabelFor(model => model.HouseAux.BathroomsAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            <input type="text" class="form-control HouseAuxElement" value="@bathrooms" name="articleViewModel.HouseAux.BathroomsAux" id="HouseAux_BathroomsAux" onchange="validateItem(this.id, 0, `Debes incluir un numero de baños valido`)" />
        </div>
        <span id="errorHouseAux_BathroomsAux" class="text-danger col-md-12"></span>
    </div>

    <div class="form-group col-lg-3">
        @Html.LabelFor(model => model.HouseAux.GarageAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            <input type="text" class="form-control HouseAuxElement" value="@garage" name="articleViewModel.HouseAux.GarageAux" id="HouseAux_HouseGarageAux" />
        </div>
        <span id="errorHouseAux_GarageAux" class="text-danger col-md-12"></span>
    </div>

    <div class="form-group col-lg-3">
        @Html.LabelFor(model => model.HouseAux.LevelsAux, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            <input type="text" class="form-control HouseAuxElement" value="@levels" name="articleViewModel.HouseAux.LevelsAux" id="HouseAux_LevelsAux" onchange="validateItem(this.id, 0, `Debes incluir un numero de niveles valido`)" />
        </div>
        <span id="errorHouseAux_LevelsAux" class="text-danger col-md-12"></span>

    </div>

    <div class="form-group col-lg-3 align-items-center d-flex">
        <div class="col-md-12 ">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-success" data-toggle="modal" onclick="getFeatures('HouseAux')" data-target="#UbicationFeaturesModal">
                Caracteristicas de casa
            </button>
        </div>
        <span class="text-danger field-validation-error" id="FeatureError">
        </span>
    </div>

    <div class="form-group col-lg-3 d-flex align-items-end justify-content-end ">
        <span><i onclick="deleteHouseForm(false)" class="fas fa-trash-alt trash-button"></i></span>
    </div>

    <div class="col-md-12 flex-wrap text-center mb-3 " id="Article_HouseAuxFeaturesList" style="display: flex;">
        <div class="col-md-12">
            <hr />
        </div>
        <span id="errorArticle_HouseAux" class="text-danger col-md-12"></span>
        @if (Model != null && Model.HouseAux != null)
        {
            foreach (var feature in Model.HouseAux.HouseFeaturesHouse)
            {
                <div class="list-group-item col-md-2 m-3 Article_HouseAux list-group-item-success" id=@String.Format("Article_HouseAux{0}",feature.HouseFeatureId)>
                    @feature.HouseFeature.Description
                    <input name="Article_HouseAuxFeatures[]" style="display: none" value="@feature.HouseFeatureId">
                </div>
            }
        }
    </div>



</div>


