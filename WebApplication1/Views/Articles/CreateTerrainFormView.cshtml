@model WebApplication1.Models.Terrain

<div class="col-md-12 article-container-header d-flex justify-content-between">
    <h3 class="">Informacion del terreno</h3>
    <span class="show-hide-bottom-form">
        <i onclick="showHouseBodyForm('terrain')" class="fas fa-plus " style="display: none;" id="terrainPlusButton"></i>
        <i onclick="hideHouseBodyForm('terrain')" class="fas fa-minus " id="terrainMinusButton"></i>
    </span>
</div>

<div>
    <div class=" col-md-12 row mt-3 mb-3" name="terrainFormBody">
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.ForeheadMeasure, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                <div class="input-group-prepend">
                    @Html.EditorFor(model => model.ForeheadMeasure, new { htmlAttributes = new { @class = "form-control", @onchange = "validateItem(this.id, 0, `Debes incluir una medida de frente valida`)" } })
                    <label class="input-group-text">Mts²</label>
                </div>
            </div>
            <span id="errorForeheadMeasure" class="text-danger col-md-12"></span>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.BackgroundMeasure, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                <div class="input-group-prepend">
                    @Html.EditorFor(model => model.BackgroundMeasure, new { htmlAttributes = new { @class = "form-control", @onchange = "validateItem(this.id, 0, `Debes incluir una medida de fondo valida`)" } })
                    <label class="input-group-text">Mts²</label>
                </div>
            </div>
            <span id="errorBackgroundMeasure" class="text-danger col-md-12"></span>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Topography, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Topography, new { htmlAttributes = new { @class = "form-control", @onchange = "validateItem(this.id, null, `Debes incluir una topografia valida`)" } })
            </div>
            <span id="errorTopography" class="text-danger col-md-12"></span>
        </div>

        <div class="form-group col-md-3 d-flex align-items-center ">
            <div class="col-md-12 ">
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-outline-success" onclick="getFeatures('Terrain')" data-toggle="modal" data-target="#UbicationFeaturesModal">
                    Caracteristicas de terreno
                </button>
            </div>
        </div>
        <div class="col-md-12 row text-center mb-3" id="TerrainFeaturesList">
            <div class="col-md-12">
            <hr />
            </div>
                <span id="errorTerrain" class="text-danger col-md-12"></span>
        </div>
    </div>
</div>

